on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'v1.28.11+rke2r1'

name: tag
permissions:
    contents: write
    id-token: write
jobs:
  publish-rke2-upgrade:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write


    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            arch: amd64
          - platform: linux/arm64
            arch: arm64

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Repo metadata
      id: repo
      uses: actions/github-script@v7
      with:
        script: |
          return context.repo.repo
    
    #Generate version tag based on timestamp
    - name: Prepare & Generate Tag
      id: prep
      env:
        TAG: ${{ github.event.inputs.version }}
      run: |
        DOCKER_IMAGE=`echo ${REGISTRY}/${IMAGE_NAME} | tr '[:upper:]' '[:lower:]'`

        TAGS="${DOCKER_IMAGE}:${TAG}"

        echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
        echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

      #Login against a Docker registry except on PR
      # https://github.com/docker/login-action
    - name: Login to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}


  

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        file: Dockerfile
        build-args: |
            TAG=${{ github.ref_name }}
            ARCH=${{ matrix.arch }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.prep.outputs.tags }}
        cache-from: type=registry,ref=${{ steps.prep.outputs.docker_image }}:buildcache
        cache-to: type=registry,ref=${{ steps.prep.outputs.docker_image }}:buildcache,mode=max


